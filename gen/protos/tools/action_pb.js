// source: protos/tools/action.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var protos_tools_tool_pb = require('../../protos/tools/tool_pb.js');
goog.object.extend(proto, protos_tools_tool_pb);
var protos_tools_command_pb = require('../../protos/tools/command_pb.js');
goog.object.extend(proto, protos_tools_command_pb);
goog.exportSymbol('proto.zorro.Action', null, global);
goog.exportSymbol('proto.zorro.ActionChild', null, global);
goog.exportSymbol('proto.zorro.ActionChild.ChildCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zorro.ActionChild = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.zorro.ActionChild.repeatedFields_, proto.zorro.ActionChild.oneofGroups_);
};
goog.inherits(proto.zorro.ActionChild, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zorro.ActionChild.displayName = 'proto.zorro.ActionChild';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zorro.Action = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zorro.Action, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zorro.Action.displayName = 'proto.zorro.Action';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.zorro.ActionChild.repeatedFields_ = [3];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.zorro.ActionChild.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.zorro.ActionChild.ChildCase = {
  CHILD_NOT_SET: 0,
  COMMAND: 1,
  ACTION: 2
};

/**
 * @return {proto.zorro.ActionChild.ChildCase}
 */
proto.zorro.ActionChild.prototype.getChildCase = function() {
  return /** @type {proto.zorro.ActionChild.ChildCase} */(jspb.Message.computeOneofCase(this, proto.zorro.ActionChild.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zorro.ActionChild.prototype.toObject = function(opt_includeInstance) {
  return proto.zorro.ActionChild.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zorro.ActionChild} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zorro.ActionChild.toObject = function(includeInstance, msg) {
  var f, obj = {
    command: (f = msg.getCommand()) && protos_tools_command_pb.Command.toObject(includeInstance, f),
    action: (f = msg.getAction()) && proto.zorro.Action.toObject(includeInstance, f),
    upstreamList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zorro.ActionChild}
 */
proto.zorro.ActionChild.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zorro.ActionChild;
  return proto.zorro.ActionChild.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zorro.ActionChild} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zorro.ActionChild}
 */
proto.zorro.ActionChild.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new protos_tools_command_pb.Command;
      reader.readMessage(value,protos_tools_command_pb.Command.deserializeBinaryFromReader);
      msg.setCommand(value);
      break;
    case 2:
      var value = new proto.zorro.Action;
      reader.readMessage(value,proto.zorro.Action.deserializeBinaryFromReader);
      msg.setAction(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addUpstream(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zorro.ActionChild.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zorro.ActionChild.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zorro.ActionChild} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zorro.ActionChild.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommand();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      protos_tools_command_pb.Command.serializeBinaryToWriter
    );
  }
  f = message.getAction();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.zorro.Action.serializeBinaryToWriter
    );
  }
  f = message.getUpstreamList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional Command command = 1;
 * @return {?proto.zorro.Command}
 */
proto.zorro.ActionChild.prototype.getCommand = function() {
  return /** @type{?proto.zorro.Command} */ (
    jspb.Message.getWrapperField(this, protos_tools_command_pb.Command, 1));
};


/**
 * @param {?proto.zorro.Command|undefined} value
 * @return {!proto.zorro.ActionChild} returns this
*/
proto.zorro.ActionChild.prototype.setCommand = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.zorro.ActionChild.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zorro.ActionChild} returns this
 */
proto.zorro.ActionChild.prototype.clearCommand = function() {
  return this.setCommand(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zorro.ActionChild.prototype.hasCommand = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Action action = 2;
 * @return {?proto.zorro.Action}
 */
proto.zorro.ActionChild.prototype.getAction = function() {
  return /** @type{?proto.zorro.Action} */ (
    jspb.Message.getWrapperField(this, proto.zorro.Action, 2));
};


/**
 * @param {?proto.zorro.Action|undefined} value
 * @return {!proto.zorro.ActionChild} returns this
*/
proto.zorro.ActionChild.prototype.setAction = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.zorro.ActionChild.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zorro.ActionChild} returns this
 */
proto.zorro.ActionChild.prototype.clearAction = function() {
  return this.setAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zorro.ActionChild.prototype.hasAction = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated string upstream = 3;
 * @return {!Array<string>}
 */
proto.zorro.ActionChild.prototype.getUpstreamList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.zorro.ActionChild} returns this
 */
proto.zorro.ActionChild.prototype.setUpstreamList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.zorro.ActionChild} returns this
 */
proto.zorro.ActionChild.prototype.addUpstream = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.zorro.ActionChild} returns this
 */
proto.zorro.ActionChild.prototype.clearUpstreamList = function() {
  return this.setUpstreamList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zorro.Action.prototype.toObject = function(opt_includeInstance) {
  return proto.zorro.Action.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zorro.Action} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zorro.Action.toObject = function(includeInstance, msg) {
  var f, obj = {
    base: (f = msg.getBase()) && protos_tools_tool_pb.ToolBase.toObject(includeInstance, f),
    childrenMap: (f = msg.getChildrenMap()) ? f.toObject(includeInstance, proto.zorro.ActionChild.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zorro.Action}
 */
proto.zorro.Action.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zorro.Action;
  return proto.zorro.Action.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zorro.Action} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zorro.Action}
 */
proto.zorro.Action.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new protos_tools_tool_pb.ToolBase;
      reader.readMessage(value,protos_tools_tool_pb.ToolBase.deserializeBinaryFromReader);
      msg.setBase(value);
      break;
    case 2:
      var value = msg.getChildrenMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.zorro.ActionChild.deserializeBinaryFromReader, "", new proto.zorro.ActionChild());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zorro.Action.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zorro.Action.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zorro.Action} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zorro.Action.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBase();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      protos_tools_tool_pb.ToolBase.serializeBinaryToWriter
    );
  }
  f = message.getChildrenMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.zorro.ActionChild.serializeBinaryToWriter);
  }
};


/**
 * optional ToolBase base = 1;
 * @return {?proto.zorro.ToolBase}
 */
proto.zorro.Action.prototype.getBase = function() {
  return /** @type{?proto.zorro.ToolBase} */ (
    jspb.Message.getWrapperField(this, protos_tools_tool_pb.ToolBase, 1));
};


/**
 * @param {?proto.zorro.ToolBase|undefined} value
 * @return {!proto.zorro.Action} returns this
*/
proto.zorro.Action.prototype.setBase = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zorro.Action} returns this
 */
proto.zorro.Action.prototype.clearBase = function() {
  return this.setBase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zorro.Action.prototype.hasBase = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * map<string, ActionChild> children = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.zorro.ActionChild>}
 */
proto.zorro.Action.prototype.getChildrenMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.zorro.ActionChild>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.zorro.ActionChild));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.zorro.Action} returns this
 */
proto.zorro.Action.prototype.clearChildrenMap = function() {
  this.getChildrenMap().clear();
  return this;
};


goog.object.extend(exports, proto.zorro);
