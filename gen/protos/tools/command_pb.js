// source: protos/tools/command.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var protos_tools_tool_pb = require('../../protos/tools/tool_pb.js');
goog.object.extend(proto, protos_tools_tool_pb);
var protos_scheduling_processor_query_pb = require('../../protos/scheduling/processor_query_pb.js');
goog.object.extend(proto, protos_scheduling_processor_query_pb);
goog.exportSymbol('proto.zorro.Command', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zorro.Command = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zorro.Command, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zorro.Command.displayName = 'proto.zorro.Command';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zorro.Command.prototype.toObject = function(opt_includeInstance) {
  return proto.zorro.Command.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zorro.Command} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zorro.Command.toObject = function(includeInstance, msg) {
  var f, obj = {
    base: (f = msg.getBase()) && protos_tools_tool_pb.ToolBase.toObject(includeInstance, f),
    processorQuery: (f = msg.getProcessorQuery()) && protos_scheduling_processor_query_pb.ProcessorQuery.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zorro.Command}
 */
proto.zorro.Command.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zorro.Command;
  return proto.zorro.Command.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zorro.Command} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zorro.Command}
 */
proto.zorro.Command.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new protos_tools_tool_pb.ToolBase;
      reader.readMessage(value,protos_tools_tool_pb.ToolBase.deserializeBinaryFromReader);
      msg.setBase(value);
      break;
    case 2:
      var value = new protos_scheduling_processor_query_pb.ProcessorQuery;
      reader.readMessage(value,protos_scheduling_processor_query_pb.ProcessorQuery.deserializeBinaryFromReader);
      msg.setProcessorQuery(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zorro.Command.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zorro.Command.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zorro.Command} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zorro.Command.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBase();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      protos_tools_tool_pb.ToolBase.serializeBinaryToWriter
    );
  }
  f = message.getProcessorQuery();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      protos_scheduling_processor_query_pb.ProcessorQuery.serializeBinaryToWriter
    );
  }
};


/**
 * optional ToolBase base = 1;
 * @return {?proto.zorro.ToolBase}
 */
proto.zorro.Command.prototype.getBase = function() {
  return /** @type{?proto.zorro.ToolBase} */ (
    jspb.Message.getWrapperField(this, protos_tools_tool_pb.ToolBase, 1));
};


/**
 * @param {?proto.zorro.ToolBase|undefined} value
 * @return {!proto.zorro.Command} returns this
*/
proto.zorro.Command.prototype.setBase = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zorro.Command} returns this
 */
proto.zorro.Command.prototype.clearBase = function() {
  return this.setBase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zorro.Command.prototype.hasBase = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ProcessorQuery processor_query = 2;
 * @return {?proto.zorro.ProcessorQuery}
 */
proto.zorro.Command.prototype.getProcessorQuery = function() {
  return /** @type{?proto.zorro.ProcessorQuery} */ (
    jspb.Message.getWrapperField(this, protos_scheduling_processor_query_pb.ProcessorQuery, 2));
};


/**
 * @param {?proto.zorro.ProcessorQuery|undefined} value
 * @return {!proto.zorro.Command} returns this
*/
proto.zorro.Command.prototype.setProcessorQuery = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zorro.Command} returns this
 */
proto.zorro.Command.prototype.clearProcessorQuery = function() {
  return this.setProcessorQuery(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zorro.Command.prototype.hasProcessorQuery = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.zorro);
